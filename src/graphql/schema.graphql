scalar ResponseAnswerData

# User type, which references Surveys and Responses
type User {
  id: ID!
  displayName: String!
  email: String!
  emailVerified: String
  image: String
  surveys: [Survey!]!
  responses: [SurveyResponse!]!
  createdAt: String!
  updatedAt: String!
}

# Survey type, which references questions and responses
type Survey {
  id: ID!
  title: String!
  description: String!
  isPublished: Boolean!
  visibility: Visibility!
  archived: Boolean!
  questions: [SurveyQuestion!]!
  responses: [SurveyResponse!]!
  creator: User!
  createdAt: String!
  updatedAt: String!
}

# SurveyQuestion type, which includes different question types
type SurveyQuestion {
  id: ID!
  text: String!
  questionType: QuestionType!
  order: Int!
  minValue: Int
  maxValue: Int
  options: [QuestionOption!]!  # For MULTI_SELECT and SINGLE_SELECT questions
}

# QuestionOption type for MULTI_SELECT and SINGLE_SELECT question types
type QuestionOption {
  id: ID!
  text: String!
  order: Int!
}

# SurveyResponse type, which references a user's response to a survey
type SurveyResponse {
  id: ID!
  isComplete: Boolean!
  submittedAt: String
  answers: [ResponseAnswer!]!
  survey: Survey!
  user: User!
  createdAt: String!
  updatedAt: String!
}

# ResponseAnswer type, which references the question and stores the answer
type ResponseAnswer {
  id: ID!
  answer: ResponseAnswerData!
  answerType: AnswerType!
  question: SurveyQuestion!
}

# Enum for different question types in a survey
enum QuestionType {
  MULTI_SELECT
  FILL_IN_THE_BLANK
  RATING_SCALE
  SINGLE_SELECT
}

# Enum for different answer types in survey responses
enum AnswerType {
  FILL_IN_THE_BLANK
  SINGLE_SELECT
  MULTI_SELECT
  RATING_SCALE
}

# Enum for survey visibility
enum Visibility {
  PUBLIC
  PRIVATE
}

# Queries to fetch surveys, responses, and users
type Query {
  users: [User!]!
  user(id: ID!): User
  surveys: [Survey!]!
  survey(id: ID!): Survey
  mySurveys: [Survey!]!
  surveyResponses(surveyId: ID!): [SurveyResponse!]!
}

# Mutations to create and update surveys, questions, and responses
type Mutation {
  createSurvey(title: String!, description: String!): Survey!
  updateSurvey(id: ID!, title: String, description: String, visibility: Visibility): Survey!
  archiveSurvey(id: ID!): Survey!

  addSurveyQuestion(surveyId: ID!, text: String!, questionType: QuestionType!, order: Int!, minValue: Int, maxValue: Int, options: [QuestionOptionInput!]): SurveyQuestion!
  updateSurveyQuestion(id: ID!, text: String, order: Int, minValue: Int, maxValue: Int, options: [QuestionOptionInput!]): SurveyQuestion!
  deleteSurveyQuestion(id: ID!): SurveyQuestion!

  submitSurveyResponse(surveyId: ID!, answers: [ResponseInput!]!): SurveyResponse!
}

# Input type for submitting survey responses
input ResponseInput {
  questionId: ID!
  answer: ResponseAnswerData!
  answerType: AnswerType!
}

input QuestionOptionInput {
  text: String!
  order: Int!
}
